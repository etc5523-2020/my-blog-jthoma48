scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5))
p2 + theme(legend.title.align = 0.5,
legend.background = element_rect(fill = "black",
linetype = "solid"),
legend.key = element_rect(fill = "grey", color = "brown"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5))
p2 + theme(legend.title.align = 0.5,
text = element_text(color = "white"),
legend.background = element_rect(fill = "black",
linetype = "solid"),
legend.key = element_rect(fill = "grey", color = "brown"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
ggplotly(p2)
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5))
p2 <- p2 + theme(legend.title.align = 0.5,
text = element_text(color = "white"),
legend.background = element_rect(fill = "black",
linetype = "solid"),
legend.key = element_rect(fill = "grey", color = "brown"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
ggplotly(p2)
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5))
p2 + theme(legend.title.align = 0.5,
text = element_text(color = "white"),
legend.background = element_rect(fill = "black",
linetype = "solid"),
legend.key = element_rect(fill = "grey", color = "brown"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September"))
p2 + theme(legend.title.align = 0.5,
text = element_text(color = "white"),
legend.background = element_rect(fill = "black",
linetype = "solid"),
legend.key = element_rect(fill = "grey", color = "brown"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 + ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5))
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
theme(legend.title.align = 0.5,
text = element_text(color = "white"),
legend.background = element_rect(fill = "black",
linetype = "solid"),
legend.key = element_rect(fill = "grey", color = "brown"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 + ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5))
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
theme(legend.title.align = 0.5,
text = element_text(color = "white"),
legend.background = element_rect(fill = "black",
linetype = "solid"),
legend.key = element_rect(fill = "grey", color = "brown"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "black", color = "black", size = 1.3),
legend.position = "bottom")
p2 + ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5))
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
theme(legend.title.align = 0.5,
text = element_text(color = "white"),
legend.background = element_rect(fill = "black",
linetype = "solid"),
legend.key = element_rect(fill = "grey", color = "brown"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 + ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5, color = "black"))
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
theme(legend.title.align = 0.5,
text = element_text(color = "black"),
legend.background = element_rect(fill = "black",
linetype = "solid"),
legend.key = element_rect(fill = "grey", color = "brown"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 + ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5, color = "black"))
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
theme(legend.title.align = 0.5,
text = element_text(color = "white"),
legend.background = element_rect(fill = "black", linetype = "solid"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 + ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5, color = "black"))
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
theme(legend.title.align = 0.5,
text = element_text(color = "white"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
legend.background = element_rect(fill = "black", linetype = "solid"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 + ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5, color = "black"))
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`), color = "red") +
geom_col(aes(y = `Daily local transmission`), colour = "grey", alpha = 0.8) +
geom_bar(aes(y = `Daily imported`), stat = "identity", position = "stack", colour = "blue") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
ggplotly(p1)
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`), color = "red") +
geom_col(aes(y = `Daily local transmission`), colour = "grey", alpha = 0.8) +
geom_bar(aes(y = `Daily imported`), stat = "identity", position = "stack", colour = "blue") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3))
ggplotly(p1)
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`), color = "red") +
geom_col(aes(y = `Daily local transmission`), colour = "grey", alpha = 0.8) +
geom_bar(aes(y = `Daily imported`), stat = "identity", position = "stack", colour = "blue") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "black", color = "black", size = 1.3))
ggplotly(p1)
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`), color = "red") +
geom_col(aes(y = `Daily local transmission`), colour = "grey", alpha = 0.8) +
geom_bar(aes(y = `Daily imported`), stat = "identity", position = "stack", colour = "blue") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3))
ggplotly(p1)
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
theme(legend.title.align = 0.5,
text = element_text(color = "white"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
legend.background = element_rect(fill = "black", linetype = "solid"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 + ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5, color = "black"))
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
theme(legend.title.align = 0.5,
text = element_text(color = "white"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
legend.background = element_rect(fill = "black", linetype = "solid"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 + ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5, color = "black"))
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
theme(legend.title.align = 0.5,
text = element_text(color = "white"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
legend.background = element_rect(fill = "black", linetype = "solid"),
panel.background = element_rect(fill = "black", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 + ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5, color = "black"))
p2 <- dorms %>% ggplot(aes(x = Date)) +
geom_col(aes(y = Cases, fill = Type), position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("March", "April", "May", "June", "July", "August", "September")) +
theme(legend.title.align = 0.5,
text = element_text(color = "white"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
legend.background = element_rect(fill = "black", linetype = "solid"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3),
legend.position = "bottom")
p2 + ggtitle("Distribution of cases from dormitories vs not from dormitories") +
theme(plot.title = element_text(hjust = 0.5, color = "black"))
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`), color = "red") +
geom_col(aes(y = `Daily local transmission`), colour = "grey", alpha = 0.8) +
geom_bar(aes(y = `Daily imported`), stat = "identity", position = "stack", colour = "blue") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.3))
ggplotly(p1)
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`), color = "red") +
geom_col(aes(y = `Daily local transmission`), colour = "grey", alpha = 0.8) +
geom_bar(aes(y = `Daily imported`), stat = "identity", position = "stack", colour = "blue") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 3))
ggplotly(p1)
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`), color = "red") +
geom_col(aes(y = `Daily local transmission`), colour = "grey", alpha = 0.8) +
geom_bar(aes(y = `Daily imported`), stat = "identity", position = "stack", colour = "blue") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "black", color = "white", size = 3))
ggplotly(p1)
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`), color = "red") +
geom_col(aes(y = `Daily local transmission`), colour = "grey", alpha = 0.8) +
geom_bar(aes(y = `Daily imported`), stat = "identity", position = "stack", colour = "blue") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5))
ggplotly(p1)
colors <- c("`Daily confirmed`" = "red", "`Daily local transmission`" = "grey", "`Daily imported`" = "blue")
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`, color = "`Daily confirmed`")) +
geom_col(aes(y = `Daily local transmission`, color = "`Daily local transmission`"), alpha = 0.8) +
geom_bar(aes(y = `Daily imported`, color = "`Daily imported`"), stat = "identity", position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5))
ggplotly(p1)
colors <- c("`Daily confirmed`" = "red", "`Daily local transmission`" = "grey", "`Daily imported`" = "blue")
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`, fill = "`Daily confirmed`")) +
geom_col(aes(y = `Daily local transmission`, fill = "`Daily local transmission`"), alpha = 0.8) +
geom_bar(aes(y = `Daily imported`, fill = "`Daily imported`"), stat = "identity", position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5))
ggplotly(p1)
colors <- c("`Daily confirmed`" = "red", "`Daily local transmission`" = "grey", "`Daily imported`" = "blue")
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`, fill = "`Daily confirmed`")) +
geom_col(aes(y = `Daily local transmission`, fill = "`Daily local transmission`"), alpha = 0.8) +
geom_bar(aes(y = `Daily imported`, fill = "`Daily imported`"), stat = "identity", position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
scale_color_manual(values = colors)
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5))
ggplotly(p1)
colors <- c("`Daily confirmed`" = "red", "`Daily local transmission`" = "grey", "`Daily imported`" = "blue")
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`, color = "`Daily confirmed`")) +
geom_col(aes(y = `Daily local transmission`, color = "`Daily local transmission`"), alpha = 0.8) +
geom_bar(aes(y = `Daily imported`, color = "`Daily imported`"), stat = "identity", position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
scale_color_manual(values = colors)
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5))
ggplotly(p1)
colors <- c("`Daily confirmed`" = "red", "`Daily local transmission`" = "grey", "`Daily imported`" = "blue")
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`, color = "`Daily confirmed`")) +
geom_col(aes(y = `Daily local transmission`, color = "`Daily local transmission`"), alpha = 0.8) +
geom_bar(aes(y = `Daily imported`, color = "`Daily imported`"), stat = "identity", position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
scale_color_manual(values = colors) +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5))
ggplotly(p1)
colors <- c("`Daily confirmed`" = "red", "`Daily local transmission`" = "grey", "`Daily imported`" = "blue")
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`, color = "`Daily confirmed`")) +
geom_col(aes(y = `Daily local transmission`, color = "`Daily local transmission`"), alpha = 0.8) +
geom_bar(aes(y = `Daily imported`, color = "`Daily imported`"), stat = "identity", position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
scale_color_manual(values = colors) +
#scale_fill_manual(values = colors)
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(legend.title.align = 0.5,
text = element_text(color = "white"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
legend.background = element_rect(fill = "black", linetype = "solid"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5),
legend.position = "bottom")
ggplotly(p1)
colors <- c("`Daily confirmed`" = "red", "`Daily local transmission`" = "grey", "`Daily imported`" = "blue")
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`, fill = "`Daily confirmed`")) +
geom_col(aes(y = `Daily local transmission`, fill = "`Daily local transmission`"), alpha = 0.8) +
geom_bar(aes(y = `Daily imported`, fill = "`Daily imported`"), stat = "identity", position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
scale_color_manual(values = colors) +
#scale_fill_manual(values = colors)
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(legend.title.align = 0.5,
text = element_text(color = "white"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
legend.background = element_rect(fill = "black", linetype = "solid"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5),
legend.position = "bottom")
ggplotly(p1)
colors <- c("`Daily confirmed`" = "red", "`Daily local transmission`" = "grey", "`Daily imported`" = "blue")
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`, fill = "`Daily confirmed`")) +
geom_col(aes(y = `Daily local transmission`, fill = "`Daily local transmission`"), alpha = 0.8) +
geom_bar(aes(y = `Daily imported`, fill = "`Daily imported`"), stat = "identity", position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
#scale_color_manual(values = colors) +
scale_fill_manual(values = colors) +
ggtitle("Breakdown of daily local transmission vs daily imported cases")
p1 <- p1 + theme(legend.title.align = 0.5,
text = element_text(color = "white"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
legend.background = element_rect(fill = "black", linetype = "solid"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5),
legend.position = "bottom")
ggplotly(p1)
colors <- c("`Daily confirmed`" = "red", "`Daily local transmission`" = "grey", "`Daily imported`" = "blue")
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`, color = "`Daily confirmed`")) +
geom_col(aes(y = `Daily local transmission`, color = "`Daily local transmission`"), alpha = 0.8) +
geom_bar(aes(y = `Daily imported`, color = "`Daily imported`"), stat = "identity", position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
scale_color_manual(values = colors)
p1 <- p1 + theme(legend.title.align = 0.5,
text = element_text(color = "white"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
legend.background = element_rect(fill = "black", linetype = "solid"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5),
legend.position = "bottom")
p1 <- p1 + ggtitle("Breakdown of daily local transmission vs daily imported cases") +
theme(plot.title = element_text(hjust = 0.5, color = "black"))
ggplotly(p1)
colors <- c("`Daily confirmed`" = "red", "`Daily local transmission`" = "grey", "`Daily imported`" = "blue")
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`, color = "`Daily confirmed`")) +
geom_col(aes(y = `Daily local transmission`, color = "`Daily local transmission`"), alpha = 0.8) +
geom_bar(aes(y = `Daily imported`, color = "`Daily imported`"), stat = "identity", position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
scale_color_manual(values = colors)
p1 <- p1 + theme(legend.title.align = 0.5,
text = element_text(color = "white"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
legend.background = element_rect(fill = "black", linetype = "solid"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5),
legend.position = "bottom")
p1 + ggtitle("Breakdown of daily local transmission vs daily imported cases") +
theme(plot.title = element_text(hjust = 0.5, color = "black"))
#ggplotly(p1)
p1 <- figures %>% ggplot(aes(x = Date)) +
geom_line(aes(y = `Daily Confirmed`), color = "red") +
geom_col(aes(y = `Daily local transmission`), color = "grey", alpha = 0.8) +
geom_bar(aes(y = `Daily imported`), color = "blue", stat = "identity", position = "stack") +
scale_x_date(date_breaks = "1 month", date_labels = c("September", "February", "March", "April", "May", "June", "July", "August")) +
ylab("No. of cases") +
xlab("Month") +
ggtitle("Breakdown of daily local transmission vs daily imported cases") +
theme(plot.title = element_text(hjust = 0.5, color = "black"))
p1 <- p1 + theme(axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
panel.background = element_rect(fill = "black", color = "red", size = 3),
panel.border = element_rect(color = "black", fill = "transparent", size = 3),
plot.background = element_rect(fill = "white", color = "black", size = 1.5))
ggplotly(p1)
